"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[310],{426:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"objects/Appoitment","title":"Appointment","description":"The Appointment class represents a scheduled meeting between a patient and a doctor, including details like the assigned room, appointment time, duration, and status.","source":"@site/docs/objects/Appoitment.md","sourceDirName":"objects","slug":"/objects/Appoitment","permalink":"/AppointmentManagementSystem/docs/objects/Appoitment","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Appointment","sidebar_label":"Appointment"},"sidebar":"tutorialSidebar","previous":{"title":"Objects","permalink":"/AppointmentManagementSystem/docs/category/objects"},"next":{"title":"Doctor","permalink":"/AppointmentManagementSystem/docs/objects/Doctor"}}');var i=n(4848),d=n(8453);const r={title:"Appointment",sidebar_label:"Appointment"},o="Appointment",c={},a=[{value:"Features",id:"features",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Enum: Status",id:"enum-status",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Conclusion",id:"conclusion",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"appointment",children:"Appointment"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"Appointment"})," class represents a scheduled meeting between a patient and a doctor, including details like the assigned room, appointment time, duration, and status."]}),"\n",(0,i.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Uniquely generated UUID at creation."}),"\n",(0,i.jsx)(t.li,{children:"Uses Lombok annotations for cleaner code."}),"\n",(0,i.jsx)(t.li,{children:"Encapsulates fields using appropriate access levels."}),"\n",(0,i.jsx)(t.li,{children:"Provides builder-based object creation."}),"\n",(0,i.jsx)(t.li,{children:"Tracks appointment details, including status and reason for visit."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"appointmentId"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"UUID"})}),(0,i.jsx)(t.td,{children:"Unique generated identifier."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"createdAt"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"LocalDateTime"})}),(0,i.jsx)(t.td,{children:"Timestamp of appointment creation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"patient"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Patient"})}),(0,i.jsx)(t.td,{children:"The patient scheduled for the appointment."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"doctor"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Doctor"})}),(0,i.jsx)(t.td,{children:"The doctor assigned to the appointment."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"roomBooked"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Room"})}),(0,i.jsx)(t.td,{children:"The room where the appointment takes place."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"appointmentAt"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"LocalDateTime"})}),(0,i.jsx)(t.td,{children:"Date and time of the appointment."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"duration"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Duration"})}),(0,i.jsx)(t.td,{children:"Length of the appointment."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"reasonForVisit"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"Description of the patient's reason for visit."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"status"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Status"})}),(0,i.jsx)(t.td,{children:"Current status of the appointment (PENDING, COMPLETE, CANCELED)."})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"public static Appointment create(Patient patient, Doctor doctor, Room room, LocalDateTime appointmentTime, Duration duration, String reasonForVisit)\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Creates a new appointment instance with a generated UUID and default status of ",(0,i.jsx)(t.code,{children:"PENDING"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"enum-status",children:"Enum: Status"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"Status"})," enum defines possible states of an appointment:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"PENDING"})," \u2013 The appointment is scheduled but has not yet occurred."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"COMPLETE"})," \u2013 The appointment has been completed."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"CANCELED"})," \u2013 The appointment has been canceled."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'Appointment appointment = Appointment.create(\r\n    somePatient,\r\n    someDoctor,\r\n    someRoom,\r\n    LocalDateTime.of(2024, 5, 15, 10, 0),\r\n    Duration.ofMinutes(30),\r\n    "Routine Checkup"\r\n);\n'})}),"\n",(0,i.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"Appointment"})," class provides a structured way to manage medical appointments, ensuring proper tracking of patient visits and doctor schedules."]})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const i={},d=s.createContext(i);function r(e){const t=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(d.Provider,{value:t},e.children)}}}]);